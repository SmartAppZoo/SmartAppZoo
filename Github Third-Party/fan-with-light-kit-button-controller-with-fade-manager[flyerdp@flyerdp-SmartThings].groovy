/* **DISCLAIMER**
* THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
* Without limitation of the foregoing, Contributors/Regents expressly does not warrant that:
* 1. the software will meet your requirements or expectations;
* 2. the software or the software content will be free of bugs, errors, viruses or other defects;
* 3. any results, output, or data provided through or generated by the software will be accurate, up-to-date, complete or reliable;
* 4. the software will be compatible with third party software;
* 5. any errors in the software will be corrected.
* The user assumes all responsibility for selecting the software and for the results obtained from the use of the software. The user shall bear the entire risk as to the quality and the performance of the software.
*
*  Smart Light Dimmer and Fan Switch Control Based on Button Remote Manager
*
*  This Smart App will Manage the Child App for button  assignment of remote/wall mount buttons to control a fan and light kit pair of switches 
*  The app is fairly rigid and expects 4 buttons to be used, single press is on and off while using the held buttons will cause
*  the lights to fade up or down.  Another single press after starting a fade function will cause the light fade to stop at the point it is at.
*  Hold on the fan control buttons will step up or down to the next speed expecting it to be a low/med/high based control
*  I am writing this for my needs with GE/Jasco fan/light dimmer switches but will customize if there is interest.
*  Copyright 2017 David Poprik
*  GNU General Public License v2 (https://www.gnu.org/licenses/gpl-2.0.txt)
*
*/

definition(
    name: "Fan with Light Kit Button Controller with Fade Manager",
    singleInstance: true,
    namespace: "flyerdp",
    author: "flyerdp@gmail.com",
	description: "Installs Fan with Light Kit Button Controller with Fade Rules.",
    category: "Convenience",
    iconUrl: "https://s3.us-east-2.amazonaws.com/mysmartthings/LightandFanButtons60x60.png",
    iconX2Url: "https://s3.us-east-2.amazonaws.com/mysmartthings/LightandFanButtons120x120.png",
    iconX3Url: "https://s3.us-east-2.amazonaws.com/mysmartthings/LightandFanButtons120x120.png"
)

preferences {
	page(name: "main")	
}

def main(){
	def installed = app.installationState == "COMPLETE"
	return dynamicPage(
    	name		: "main"
        ,title		: "Motion Control Switches with Retrigger Timeout"
        ,install	: true
        ,uninstall	: installed
        ){
 
            if (installed){
            	section {
                    app(name: "Light and Fan Button Controller Child", appName: "Fan with Light Kit Button Controller with Fade Child", namespace: "flyerdp", title: "Create New Light and Fan Button Control Rule...", multiple: true)
            	}
				section (getVersionInfo()) { }
            } else {
            	section(){
                	paragraph("Tap done to finish installing the Manager then re-open the app from the smartApps flyout to create your motion triggered switch rules.")
                }
            }
			remove("Delete Manager", "Delete?", "${app.label}")
        }
}

def installed() {
    initialize()
}

def updated() {
    unsubscribe()
    initialize()
}

def initialize() {
	state.verParent = "1.1.5"
}
def getVersionInfo(){
	return "Versions:\n\tMotion Control Switch Manager: ${state.verParent}\n\tMotion Control Switch Configuration: ${state.verChild ?: "Unknown."}"
}

def updateVer(vChild){
    state.verChild = vChild
}